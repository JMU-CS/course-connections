<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
    font-family: Helvetica Neue,Helvetica,Arial,sans-serif; 
    font: 10px;
    padding-left: 4em;
    padding-right: 4em;
}

.group-tick line {
  stroke: #000;
}

.ribbons {
  fill-opacity: 0.67;
}

svg {
    font-size: 8pt;
}

div#tags ul li {
    display: inline-block;
    width: 12em;
}

</style>
<body>
<h1>Interconnections between JMU CS Courses</h1>

<p class="main-content">
The visualization below shows the standard courses of the JMU computer science curriculum. 
The courses are arranged around the outside of the diagram. We tagged each course with different 
CS concepts and topics covered by the course. A chord connects two courses if they have at least 
one main concept in common. Place your mouse over a course's color block to highlight just that
course and its connections to other courses in the diagram on the left as well as its key concepts
on the right. Clicking on a concept brings up an explanation of that concept as well as a list of
all courses that use that concept. 
</p>

<table>
    <tr>
        <td valign="top"><svg width="640" height="640"></svg></td>
        <td><div id="courses">
            <h2>Courses</h2>
            
            <h3>CS Intro</h3>
            <p>CS 101, CS 149, CS 159</p>
            
            <h3>CS Core</h3>

            <h4>Theory:</h4>
            <p>CS 227, CS 240, CS 327, CS 430, CS 442, CS 452</p>
            
            <h4>Systems:</h4>
            <p>CS 261, CS 361, CS 432, CS 450, CS 456, CS 470</p>

            <h3>CS Applications</h3> 

            <h4>Software Development:</h4>
            <p>CS 345, CS 446, CS 447, CS 474</p>
            <h4>Artificial Intelligence</h4>
            <p>CS 354, CS 444</p>
            <h4>Security</h4>
            <p>CS 457, CS 458</p>


        </div></td>
    </tr>
    <tr>
        <td colspan="2">
            <div id="tags">
                <h2>Topics</h2>
                <ul></ul>
                </div>
        </td>
    </tr>
</table>


<script src="https://d3js.org/d3.v4.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
var matrix = [[0,3,3,1,3,4,2,2,2,4,5,2,4,2,4,1,1,5,3,4,3,4,3,2],
[3,0,3,1,1,1,0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,0,0,0],
[3,3,0,1,3,0,0,0,2,1,0,2,1,1,1,1,0,1,1,0,0,0,0,1],
[1,1,1,0,3,0,4,0,0,1,0,0,0,2,1,0,0,0,1,0,2,1,0,2],
[3,1,3,3,0,0,5,0,2,3,0,2,4,2,3,1,0,2,5,0,3,1,0,1],
[4,1,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,5,0,5,0,4,3,0],
[2,0,0,4,5,0,0,0,0,4,0,2,3,2,4,0,0,1,5,0,4,2,2,1],
[2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[2,0,2,0,2,0,0,1,0,1,0,2,2,0,1,3,2,1,1,0,0,0,0,1],
[4,0,1,1,3,0,4,0,1,0,0,2,4,1,8,1,0,2,4,0,0,0,1,1],
[5,1,0,0,0,6,0,0,0,0,0,1,0,0,0,0,0,4,0,5,0,2,3,0],
[2,1,2,0,2,0,2,0,2,2,1,0,4,0,2,1,1,1,1,0,0,0,1,1],
[4,0,1,0,4,0,3,0,2,4,0,4,0,1,4,2,1,2,4,0,1,0,0,1],
[2,1,1,2,2,0,2,0,0,1,0,0,1,0,1,0,0,1,2,0,1,0,0,0],
[4,0,1,1,3,0,4,0,1,8,0,2,4,1,0,1,0,2,4,0,0,0,1,1],
[1,0,1,0,1,0,0,0,3,1,0,1,2,0,1,0,1,1,1,0,0,0,0,1],
[1,0,0,0,0,0,0,1,2,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0],
[5,0,1,0,2,5,1,0,1,2,4,1,2,1,2,1,0,0,2,4,0,4,3,1],
[3,0,1,1,5,0,5,0,1,4,0,1,4,2,4,1,0,2,0,0,3,0,1,1],
[4,1,0,0,0,5,0,0,0,0,5,0,0,0,0,0,0,4,0,0,0,2,0,0],
[3,0,0,2,3,0,4,0,0,0,0,0,1,1,0,0,0,0,3,0,0,3,1,0],
[4,0,0,1,1,4,2,0,0,0,2,0,0,0,0,0,0,4,0,2,3,0,3,0],
[3,0,0,0,0,3,2,0,0,1,3,1,0,0,1,0,0,3,1,0,1,3,0,2],
[2,0,1,2,1,0,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,0,2,0]];

var courseLabels = [
    "CS 101",
    "CS 149",
    "CS 159",
    "CS 227",
    "CS 240",
    "CS 261",
    "CS 327",
    "CS 330",
    "CS 345",
    "CS 354",
    "CS 361",
    "CS 430",
    "CS 432",
    "CS 442",
    "CS 444",
    "CS 446",
    "CS 447",
    "CS 450",
    "CS 452",
    "CS 456",
    "CS 457",
    "CS 458",
    "CS 470",
    "CS 474"
];

var INTRO = 0, 
    THEORY = 1, 
    SYSTEMS = 2,  
    APPLICATIONS = 3;

var courseGroups = {
    "CS 101": INTRO,
    "CS 149": INTRO,
    "CS 159": INTRO,
    "CS 227": THEORY,
    "CS 240": THEORY,
    "CS 261": SYSTEMS,
    "CS 327": THEORY,
    "CS 330": INTRO,
    "CS 345": APPLICATIONS,
    "CS 354": APPLICATIONS,
    "CS 361": SYSTEMS,
    "CS 430": THEORY,
    "CS 432": SYSTEMS,
    "CS 442": THEORY,
    "CS 444": APPLICATIONS,
    "CS 446": APPLICATIONS,
    "CS 447": APPLICATIONS,
    "CS 450": SYSTEMS,
    "CS 452": THEORY,
    "CS 456": SYSTEMS,
    "CS 457": APPLICATIONS,
    "CS 458": APPLICATIONS,
    "CS 470": SYSTEMS,
    "CS 474": APPLICATIONS
};

var courseTitles = [
    "Introduction to CS",
    "Intro to Programming",
    "Advanced Programing",
    "Discrete Structures I",
    "Data Structures",
    "Systems I",
    "Discrete Structures II",
    "Ethical Issues",
    "Software Engineering",
    "Robotics",
    "Systems II",
    "Programming Languages",
    "Compilers",
    "Logic in CS",
    "Artificial Intelligence",
    "Software Design",
    "Interaction Design",
    "OS",
    "Algorithms",
    "Architecture",
    "Information Security",
    "Cyber Defense",
    "Parallel and Distributed Systems",
    "Databases"
];

var tags = [
    "#algorithms",
    "#architectures",
    "#artificial-intelligence",
    "#assembly-machine-code",
    "#big-o-analysis",
    "#binary-representations",
    "#c-programming",
    "#cloud-computing",
    "#complexity",
    "#computability-theory-and-automata",
    "#counting-and-probability",
    "#cryptography",
    "#data-structures",
    "#database-systems",
    "#declarative-programming",
    "#design",
    "#distributed-systems",
    "#ethics",
    "#file-systems",
    "#functional-programming",
    "#graphs-and-trees",
    "#human-side",
    "#induction-and-recursion",
    "#infosec",
    "#java",
    "#linear-algebra",
    "#logic",
    "#networking",
    "#number-theory",
    "#oop",
    "#operating-systems",
    "#parallelization",
    "#programming",
    "#programming-languages",
    "#proof-techniques",
    "#python",
    "#relations",
    "#scheduling",
    "#set-theory",
    "#software-engineering",
    "#unix-linux",
    "#virtualization"
];

/********************************
 * SET UP THE CHORD DIAGRAM
 ********************************/ 

var svg = d3.select("svg"),
    width = +svg.attr("width"),
    height = +svg.attr("height"),
    outerRadius = Math.min(width, height) * 0.5 - 40,
    innerRadius = outerRadius - 30;

var formatValue = d3.formatPrefix(",.0", 1e3);

var chord = d3.chord()
    .padAngle(0.05)
    .sortSubgroups(d3.descending);

var arc = d3.arc()
    .innerRadius(innerRadius)
    .outerRadius(outerRadius);

var ribbon = d3.ribbon()
    .radius(innerRadius);

var color = d3.scaleOrdinal()
    .domain(d3.range(4))
    .range(["#47d147", "#ff1a1a", "#3385ff", "#ffa31a"]);

var g = svg.append("g")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")")
    .datum(chord(matrix));

// Creates the base of each node. 
var group = g.append("g")
    .attr("class", "groups")
  .selectAll("g")
  .data(function(chords) { return chords.groups; })
  .enter().append("g");


group.append("path")
    .style("fill", function(d) { return color(courseGroups[courseLabels[d.index]]); })
    .style("stroke", function(d) { return d3.rgb(color(courseGroups[courseLabels[d.index]])).darker(); })
    .attr("d", arc)
    .on("mouseover", fade(.1))
    .on("mouseout", fade(1));

function isCoreTheory(courseIdx) {
    var course = courseLabels[courseIdx];
    return course == "CS 327" || course == "CS 227" || course == "CS 240" || course == "CS 452";
}

function isCoreSystems(courseIdx) {
    var course = courseLabels[courseIdx];
    return course == "CS 261" || course == "CS 361";
}


function getColor(src, trg) {
    if (isCoreTheory(src) || isCoreTheory(trg)) return color(THEORY);
    else if (isCoreSystems(src) || isCoreSystems(trg)) return color(SYSTEMS);
    else return color(courseGroups[courseLabels[trg]]);
}

g.append("g")
    .attr("class", "ribbons")
  .selectAll("path")
  .data(function(chords) { return chords; })
  .enter().append("path")
    .attr("class", "ribbon")
    .attr("d", ribbon)
    .style("fill", function(d) { 
        return getColor(d.source.index, d.target.index);
        //return color(courseGroups[courseLabels[d.source.index]]);
        //return color(d.target.index); 
    })
    .style("stroke", function(d) { 
        return d3.rgb(getColor(d.source.index, d.target.index)).darker();
        //return d3.rgb(color(courseGroups[courseLabels[d.target.index]])).darker();
        //return d3.rgb(color(d.target.index)).darker(); 
    });


svg.selectAll(".groups g").append("text").each(function (d) {d.angle = (d.startAngle + d.endAngle) / 2;}).attr("dy", ".35em").attr("transform", function(d) {
     return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")"
         + "translate(" + (outerRadius + 4) + ")"
         + (d.angle > Math.PI ? "rotate(180)" : "");
     })
     .style("text-anchor", function(d) { return d.angle > Math.PI ? "end" : null; })
     .text(function(d) { return courseLabels[d.index]; });

var ribbons = svg.selectAll(".ribbon");

function fade(opacity) {
  return function(d, i) {
    ribbons
        .filter(function(d) {
          return d.source.index != i && d.target.index != i;
        })
      .transition()
      .style("opacity", opacity);
  };
}


/********************************
 * SET UP THE INFORMATION PANE
 ********************************/ 
var tagsDiv = $("div#tags ul");
for (var i = 0; i < tags.length; i++) {
    tagsDiv.append("<li>" + tags[i] + "</li>");
}

</script>
</body>